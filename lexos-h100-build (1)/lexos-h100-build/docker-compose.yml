version: '3.8'

services:
  # Core LexOS service with H100 support
  lexos-core:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: lexos-core
    restart: unless-stopped
    ports:
      - "8000:8000"  # API
      - "8080:8080"  # WebSocket
    volumes:
      - ./data:/app/data
      - ./models:/app/models
      - ./config:/app/config
      - ./logs:/app/logs
    environment:
      - NVIDIA_VISIBLE_DEVICES=all
      - TOGETHER_API_KEY=${TOGETHER_API_KEY}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - JWT_SECRET=${JWT_SECRET}
      - ENVIRONMENT=production
      - LOG_LEVEL=info
      - MEMORY_BACKEND=qdrant
      - ENABLE_SHADOW_AGENT=true
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    depends_on:
      - qdrant
      - redis
    networks:
      - lexos-network

  # Vector database for semantic memory
  qdrant:
    image: qdrant/qdrant:latest
    container_name: lexos-qdrant
    restart: unless-stopped
    ports:
      - "6333:6333"
    volumes:
      - qdrant-data:/qdrant/storage
    networks:
      - lexos-network

  # Redis for caching and pub/sub
  redis:
    image: redis:7-alpine
    container_name: lexos-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    command: redis-server --appendonly yes --maxmemory 2gb --maxmemory-policy allkeys-lru
    networks:
      - lexos-network

  # MongoDB for document storage
  mongodb:
    image: mongo:6
    container_name: lexos-mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    volumes:
      - mongodb-data:/data/db
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_USER:-lexos}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_PASSWORD:-lexospassword}
    networks:
      - lexos-network

  # n8n for workflow automation
  n8n:
    image: n8nio/n8n:latest
    container_name: lexos-n8n
    restart: unless-stopped
    ports:
      - "5678:5678"
    volumes:
      - n8n-data:/home/node/.n8n
    environment:
      - N8N_HOST=${N8N_HOST:-localhost}
      - N8N_PORT=5678
      - N8N_PROTOCOL=http
      - NODE_ENV=production
      - N8N_ENCRYPTION_KEY=${N8N_ENCRYPTION_KEY:-lexos-encryption-key}
      - WEBHOOK_URL=http://lexos-core:8000/api/n8n/webhook
    networks:
      - lexos-network

  # Nginx for serving frontend and API
  nginx:
    image: nginx:alpine
    container_name: lexos-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/certs:/etc/nginx/certs:ro
      - ./frontend/build:/usr/share/nginx/html:ro
    depends_on:
      - lexos-core
    networks:
      - lexos-network

  # Prometheus for monitoring
  prometheus:
    image: prom/prometheus:latest
    container_name: lexos-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    networks:
      - lexos-network
    profiles:
      - monitoring

  # Grafana for dashboards
  grafana:
    image: grafana/grafana:latest
    container_name: lexos-grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning:ro
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin}
    networks:
      - lexos-network
    profiles:
      - monitoring

volumes:
  qdrant-data:
  redis-data:
  mongodb-data:
  n8n-data:
  prometheus-data:
  grafana-data:

networks:
  lexos-network:
    driver: bridge

